// source: src/app/protos/DatabaseProto.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.DatabaseGRPC.D_Document', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_Documents', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_Project', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_ProjectTheme', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_ProjectThemes', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_Projects', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_RemoteFile', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_RemoteFiles', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_Subject', null, global);
goog.exportSymbol('proto.DatabaseGRPC.D_Subjects', null, global);
goog.exportSymbol('proto.DatabaseGRPC.MemberInformation', null, global);
goog.exportSymbol('proto.DatabaseGRPC.ProjectThemeUserInfomation', null, global);
goog.exportSymbol('proto.DatabaseGRPC.ProjectUserInfomation', null, global);
goog.exportSymbol('proto.DatabaseGRPC.ThemeFromSubject', null, global);
goog.exportSymbol('proto.DatabaseGRPC.UserDbInfomation', null, global);
goog.exportSymbol('proto.DatabaseGRPC.intger', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.ThemeFromSubject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.ThemeFromSubject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.ThemeFromSubject.displayName = 'proto.DatabaseGRPC.ThemeFromSubject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.MemberInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.MemberInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.MemberInformation.displayName = 'proto.DatabaseGRPC.MemberInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.UserDbInfomation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.UserDbInfomation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.UserDbInfomation.displayName = 'proto.DatabaseGRPC.UserDbInfomation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.ProjectUserInfomation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.ProjectUserInfomation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.ProjectUserInfomation.displayName = 'proto.DatabaseGRPC.ProjectUserInfomation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.ProjectThemeUserInfomation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.ProjectThemeUserInfomation.displayName = 'proto.DatabaseGRPC.ProjectThemeUserInfomation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.intger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.intger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.intger.displayName = 'proto.DatabaseGRPC.intger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_Documents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DatabaseGRPC.D_Documents.repeatedFields_, null);
};
goog.inherits(proto.DatabaseGRPC.D_Documents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_Documents.displayName = 'proto.DatabaseGRPC.D_Documents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_Projects = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DatabaseGRPC.D_Projects.repeatedFields_, null);
};
goog.inherits(proto.DatabaseGRPC.D_Projects, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_Projects.displayName = 'proto.DatabaseGRPC.D_Projects';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_RemoteFiles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DatabaseGRPC.D_RemoteFiles.repeatedFields_, null);
};
goog.inherits(proto.DatabaseGRPC.D_RemoteFiles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_RemoteFiles.displayName = 'proto.DatabaseGRPC.D_RemoteFiles';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_Subjects = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DatabaseGRPC.D_Subjects.repeatedFields_, null);
};
goog.inherits(proto.DatabaseGRPC.D_Subjects, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_Subjects.displayName = 'proto.DatabaseGRPC.D_Subjects';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_ProjectThemes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DatabaseGRPC.D_ProjectThemes.repeatedFields_, null);
};
goog.inherits(proto.DatabaseGRPC.D_ProjectThemes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_ProjectThemes.displayName = 'proto.DatabaseGRPC.D_ProjectThemes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_Project = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DatabaseGRPC.D_Project.repeatedFields_, null);
};
goog.inherits(proto.DatabaseGRPC.D_Project, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_Project.displayName = 'proto.DatabaseGRPC.D_Project';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_Document = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DatabaseGRPC.D_Document.repeatedFields_, null);
};
goog.inherits(proto.DatabaseGRPC.D_Document, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_Document.displayName = 'proto.DatabaseGRPC.D_Document';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_RemoteFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.D_RemoteFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_RemoteFile.displayName = 'proto.DatabaseGRPC.D_RemoteFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_Subject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.D_Subject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_Subject.displayName = 'proto.DatabaseGRPC.D_Subject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DatabaseGRPC.D_ProjectTheme = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DatabaseGRPC.D_ProjectTheme, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DatabaseGRPC.D_ProjectTheme.displayName = 'proto.DatabaseGRPC.D_ProjectTheme';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.ThemeFromSubject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.ThemeFromSubject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.ThemeFromSubject.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.DatabaseGRPC.UserDbInfomation.toObject(includeInstance, f),
    subject: (f = msg.getSubject()) && proto.DatabaseGRPC.D_Subject.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.ThemeFromSubject}
 */
proto.DatabaseGRPC.ThemeFromSubject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.ThemeFromSubject;
  return proto.DatabaseGRPC.ThemeFromSubject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.ThemeFromSubject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.ThemeFromSubject}
 */
proto.DatabaseGRPC.ThemeFromSubject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.UserDbInfomation;
      reader.readMessage(value,proto.DatabaseGRPC.UserDbInfomation.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.DatabaseGRPC.D_Subject;
      reader.readMessage(value,proto.DatabaseGRPC.D_Subject.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.ThemeFromSubject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.ThemeFromSubject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.ThemeFromSubject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DatabaseGRPC.UserDbInfomation.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DatabaseGRPC.D_Subject.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserDbInfomation user = 1;
 * @return {?proto.DatabaseGRPC.UserDbInfomation}
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.getUser = function() {
  return /** @type{?proto.DatabaseGRPC.UserDbInfomation} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.UserDbInfomation, 1));
};


/**
 * @param {?proto.DatabaseGRPC.UserDbInfomation|undefined} value
 * @return {!proto.DatabaseGRPC.ThemeFromSubject} returns this
*/
proto.DatabaseGRPC.ThemeFromSubject.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.ThemeFromSubject} returns this
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional D_Subject subject = 2;
 * @return {?proto.DatabaseGRPC.D_Subject}
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.getSubject = function() {
  return /** @type{?proto.DatabaseGRPC.D_Subject} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.D_Subject, 2));
};


/**
 * @param {?proto.DatabaseGRPC.D_Subject|undefined} value
 * @return {!proto.DatabaseGRPC.ThemeFromSubject} returns this
*/
proto.DatabaseGRPC.ThemeFromSubject.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.ThemeFromSubject} returns this
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.ThemeFromSubject.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.MemberInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.MemberInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.MemberInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.MemberInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.DatabaseGRPC.UserDbInfomation.toObject(includeInstance, f),
    newmember: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.MemberInformation}
 */
proto.DatabaseGRPC.MemberInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.MemberInformation;
  return proto.DatabaseGRPC.MemberInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.MemberInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.MemberInformation}
 */
proto.DatabaseGRPC.MemberInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.UserDbInfomation;
      reader.readMessage(value,proto.DatabaseGRPC.UserDbInfomation.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewmember(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.MemberInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.MemberInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.MemberInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.MemberInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DatabaseGRPC.UserDbInfomation.serializeBinaryToWriter
    );
  }
  f = message.getNewmember();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional UserDbInfomation user = 1;
 * @return {?proto.DatabaseGRPC.UserDbInfomation}
 */
proto.DatabaseGRPC.MemberInformation.prototype.getUser = function() {
  return /** @type{?proto.DatabaseGRPC.UserDbInfomation} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.UserDbInfomation, 1));
};


/**
 * @param {?proto.DatabaseGRPC.UserDbInfomation|undefined} value
 * @return {!proto.DatabaseGRPC.MemberInformation} returns this
*/
proto.DatabaseGRPC.MemberInformation.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.MemberInformation} returns this
 */
proto.DatabaseGRPC.MemberInformation.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.MemberInformation.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string newMember = 2;
 * @return {string}
 */
proto.DatabaseGRPC.MemberInformation.prototype.getNewmember = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.MemberInformation} returns this
 */
proto.DatabaseGRPC.MemberInformation.prototype.setNewmember = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.UserDbInfomation.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.UserDbInfomation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.UserDbInfomation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.UserDbInfomation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dbname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.UserDbInfomation}
 */
proto.DatabaseGRPC.UserDbInfomation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.UserDbInfomation;
  return proto.DatabaseGRPC.UserDbInfomation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.UserDbInfomation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.UserDbInfomation}
 */
proto.DatabaseGRPC.UserDbInfomation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDbname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.UserDbInfomation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.UserDbInfomation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.UserDbInfomation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.UserDbInfomation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDbname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.DatabaseGRPC.UserDbInfomation.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.UserDbInfomation} returns this
 */
proto.DatabaseGRPC.UserDbInfomation.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string DbName = 2;
 * @return {string}
 */
proto.DatabaseGRPC.UserDbInfomation.prototype.getDbname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.UserDbInfomation} returns this
 */
proto.DatabaseGRPC.UserDbInfomation.prototype.setDbname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.ProjectUserInfomation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.ProjectUserInfomation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.ProjectUserInfomation.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.DatabaseGRPC.UserDbInfomation.toObject(includeInstance, f),
    project: (f = msg.getProject()) && proto.DatabaseGRPC.D_Project.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.ProjectUserInfomation}
 */
proto.DatabaseGRPC.ProjectUserInfomation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.ProjectUserInfomation;
  return proto.DatabaseGRPC.ProjectUserInfomation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.ProjectUserInfomation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.ProjectUserInfomation}
 */
proto.DatabaseGRPC.ProjectUserInfomation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.UserDbInfomation;
      reader.readMessage(value,proto.DatabaseGRPC.UserDbInfomation.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.DatabaseGRPC.D_Project;
      reader.readMessage(value,proto.DatabaseGRPC.D_Project.deserializeBinaryFromReader);
      msg.setProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.ProjectUserInfomation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.ProjectUserInfomation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.ProjectUserInfomation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DatabaseGRPC.UserDbInfomation.serializeBinaryToWriter
    );
  }
  f = message.getProject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DatabaseGRPC.D_Project.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserDbInfomation user = 1;
 * @return {?proto.DatabaseGRPC.UserDbInfomation}
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.getUser = function() {
  return /** @type{?proto.DatabaseGRPC.UserDbInfomation} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.UserDbInfomation, 1));
};


/**
 * @param {?proto.DatabaseGRPC.UserDbInfomation|undefined} value
 * @return {!proto.DatabaseGRPC.ProjectUserInfomation} returns this
*/
proto.DatabaseGRPC.ProjectUserInfomation.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.ProjectUserInfomation} returns this
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional D_Project project = 2;
 * @return {?proto.DatabaseGRPC.D_Project}
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.getProject = function() {
  return /** @type{?proto.DatabaseGRPC.D_Project} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.D_Project, 2));
};


/**
 * @param {?proto.DatabaseGRPC.D_Project|undefined} value
 * @return {!proto.DatabaseGRPC.ProjectUserInfomation} returns this
*/
proto.DatabaseGRPC.ProjectUserInfomation.prototype.setProject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.ProjectUserInfomation} returns this
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.clearProject = function() {
  return this.setProject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.ProjectUserInfomation.prototype.hasProject = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.ProjectThemeUserInfomation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.ProjectThemeUserInfomation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.DatabaseGRPC.UserDbInfomation.toObject(includeInstance, f),
    theme: (f = msg.getTheme()) && proto.DatabaseGRPC.D_ProjectTheme.toObject(includeInstance, f),
    username: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.ProjectThemeUserInfomation}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.ProjectThemeUserInfomation;
  return proto.DatabaseGRPC.ProjectThemeUserInfomation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.ProjectThemeUserInfomation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.ProjectThemeUserInfomation}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.UserDbInfomation;
      reader.readMessage(value,proto.DatabaseGRPC.UserDbInfomation.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.DatabaseGRPC.D_ProjectTheme;
      reader.readMessage(value,proto.DatabaseGRPC.D_ProjectTheme.deserializeBinaryFromReader);
      msg.setTheme(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.ProjectThemeUserInfomation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.ProjectThemeUserInfomation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DatabaseGRPC.UserDbInfomation.serializeBinaryToWriter
    );
  }
  f = message.getTheme();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DatabaseGRPC.D_ProjectTheme.serializeBinaryToWriter
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional UserDbInfomation user = 1;
 * @return {?proto.DatabaseGRPC.UserDbInfomation}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.getUser = function() {
  return /** @type{?proto.DatabaseGRPC.UserDbInfomation} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.UserDbInfomation, 1));
};


/**
 * @param {?proto.DatabaseGRPC.UserDbInfomation|undefined} value
 * @return {!proto.DatabaseGRPC.ProjectThemeUserInfomation} returns this
*/
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.ProjectThemeUserInfomation} returns this
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional D_ProjectTheme theme = 2;
 * @return {?proto.DatabaseGRPC.D_ProjectTheme}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.getTheme = function() {
  return /** @type{?proto.DatabaseGRPC.D_ProjectTheme} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.D_ProjectTheme, 2));
};


/**
 * @param {?proto.DatabaseGRPC.D_ProjectTheme|undefined} value
 * @return {!proto.DatabaseGRPC.ProjectThemeUserInfomation} returns this
*/
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.setTheme = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.ProjectThemeUserInfomation} returns this
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.clearTheme = function() {
  return this.setTheme(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.hasTheme = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.ProjectThemeUserInfomation} returns this
 */
proto.DatabaseGRPC.ProjectThemeUserInfomation.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.intger.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.intger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.intger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.intger.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.intger}
 */
proto.DatabaseGRPC.intger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.intger;
  return proto.DatabaseGRPC.intger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.intger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.intger}
 */
proto.DatabaseGRPC.intger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.intger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.intger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.intger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.intger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 number = 1;
 * @return {number}
 */
proto.DatabaseGRPC.intger.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.intger} returns this
 */
proto.DatabaseGRPC.intger.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DatabaseGRPC.D_Documents.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_Documents.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_Documents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_Documents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Documents.toObject = function(includeInstance, msg) {
  var f, obj = {
    dDocumentsList: jspb.Message.toObjectList(msg.getDDocumentsList(),
    proto.DatabaseGRPC.D_Document.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_Documents}
 */
proto.DatabaseGRPC.D_Documents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_Documents;
  return proto.DatabaseGRPC.D_Documents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_Documents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_Documents}
 */
proto.DatabaseGRPC.D_Documents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.D_Document;
      reader.readMessage(value,proto.DatabaseGRPC.D_Document.deserializeBinaryFromReader);
      msg.addDDocuments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_Documents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_Documents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_Documents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Documents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DatabaseGRPC.D_Document.serializeBinaryToWriter
    );
  }
};


/**
 * repeated D_Document D_Documents = 1;
 * @return {!Array<!proto.DatabaseGRPC.D_Document>}
 */
proto.DatabaseGRPC.D_Documents.prototype.getDDocumentsList = function() {
  return /** @type{!Array<!proto.DatabaseGRPC.D_Document>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DatabaseGRPC.D_Document, 1));
};


/**
 * @param {!Array<!proto.DatabaseGRPC.D_Document>} value
 * @return {!proto.DatabaseGRPC.D_Documents} returns this
*/
proto.DatabaseGRPC.D_Documents.prototype.setDDocumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DatabaseGRPC.D_Document=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DatabaseGRPC.D_Document}
 */
proto.DatabaseGRPC.D_Documents.prototype.addDDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DatabaseGRPC.D_Document, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DatabaseGRPC.D_Documents} returns this
 */
proto.DatabaseGRPC.D_Documents.prototype.clearDDocumentsList = function() {
  return this.setDDocumentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DatabaseGRPC.D_Projects.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_Projects.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_Projects.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_Projects} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Projects.toObject = function(includeInstance, msg) {
  var f, obj = {
    dProjectList: jspb.Message.toObjectList(msg.getDProjectList(),
    proto.DatabaseGRPC.D_Project.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_Projects}
 */
proto.DatabaseGRPC.D_Projects.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_Projects;
  return proto.DatabaseGRPC.D_Projects.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_Projects} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_Projects}
 */
proto.DatabaseGRPC.D_Projects.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.D_Project;
      reader.readMessage(value,proto.DatabaseGRPC.D_Project.deserializeBinaryFromReader);
      msg.addDProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_Projects.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_Projects.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_Projects} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Projects.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDProjectList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DatabaseGRPC.D_Project.serializeBinaryToWriter
    );
  }
};


/**
 * repeated D_Project D_Project = 1;
 * @return {!Array<!proto.DatabaseGRPC.D_Project>}
 */
proto.DatabaseGRPC.D_Projects.prototype.getDProjectList = function() {
  return /** @type{!Array<!proto.DatabaseGRPC.D_Project>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DatabaseGRPC.D_Project, 1));
};


/**
 * @param {!Array<!proto.DatabaseGRPC.D_Project>} value
 * @return {!proto.DatabaseGRPC.D_Projects} returns this
*/
proto.DatabaseGRPC.D_Projects.prototype.setDProjectList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DatabaseGRPC.D_Project=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DatabaseGRPC.D_Project}
 */
proto.DatabaseGRPC.D_Projects.prototype.addDProject = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DatabaseGRPC.D_Project, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DatabaseGRPC.D_Projects} returns this
 */
proto.DatabaseGRPC.D_Projects.prototype.clearDProjectList = function() {
  return this.setDProjectList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DatabaseGRPC.D_RemoteFiles.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_RemoteFiles.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_RemoteFiles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_RemoteFiles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_RemoteFiles.toObject = function(includeInstance, msg) {
  var f, obj = {
    dRemotefileList: jspb.Message.toObjectList(msg.getDRemotefileList(),
    proto.DatabaseGRPC.D_RemoteFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_RemoteFiles}
 */
proto.DatabaseGRPC.D_RemoteFiles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_RemoteFiles;
  return proto.DatabaseGRPC.D_RemoteFiles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_RemoteFiles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_RemoteFiles}
 */
proto.DatabaseGRPC.D_RemoteFiles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.D_RemoteFile;
      reader.readMessage(value,proto.DatabaseGRPC.D_RemoteFile.deserializeBinaryFromReader);
      msg.addDRemotefile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_RemoteFiles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_RemoteFiles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_RemoteFiles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_RemoteFiles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDRemotefileList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DatabaseGRPC.D_RemoteFile.serializeBinaryToWriter
    );
  }
};


/**
 * repeated D_RemoteFile D_RemoteFile = 1;
 * @return {!Array<!proto.DatabaseGRPC.D_RemoteFile>}
 */
proto.DatabaseGRPC.D_RemoteFiles.prototype.getDRemotefileList = function() {
  return /** @type{!Array<!proto.DatabaseGRPC.D_RemoteFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DatabaseGRPC.D_RemoteFile, 1));
};


/**
 * @param {!Array<!proto.DatabaseGRPC.D_RemoteFile>} value
 * @return {!proto.DatabaseGRPC.D_RemoteFiles} returns this
*/
proto.DatabaseGRPC.D_RemoteFiles.prototype.setDRemotefileList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DatabaseGRPC.D_RemoteFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DatabaseGRPC.D_RemoteFile}
 */
proto.DatabaseGRPC.D_RemoteFiles.prototype.addDRemotefile = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DatabaseGRPC.D_RemoteFile, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DatabaseGRPC.D_RemoteFiles} returns this
 */
proto.DatabaseGRPC.D_RemoteFiles.prototype.clearDRemotefileList = function() {
  return this.setDRemotefileList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DatabaseGRPC.D_Subjects.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_Subjects.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_Subjects.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_Subjects} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Subjects.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectList: jspb.Message.toObjectList(msg.getSubjectList(),
    proto.DatabaseGRPC.D_Subject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_Subjects}
 */
proto.DatabaseGRPC.D_Subjects.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_Subjects;
  return proto.DatabaseGRPC.D_Subjects.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_Subjects} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_Subjects}
 */
proto.DatabaseGRPC.D_Subjects.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.D_Subject;
      reader.readMessage(value,proto.DatabaseGRPC.D_Subject.deserializeBinaryFromReader);
      msg.addSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_Subjects.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_Subjects.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_Subjects} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Subjects.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DatabaseGRPC.D_Subject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated D_Subject Subject = 1;
 * @return {!Array<!proto.DatabaseGRPC.D_Subject>}
 */
proto.DatabaseGRPC.D_Subjects.prototype.getSubjectList = function() {
  return /** @type{!Array<!proto.DatabaseGRPC.D_Subject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DatabaseGRPC.D_Subject, 1));
};


/**
 * @param {!Array<!proto.DatabaseGRPC.D_Subject>} value
 * @return {!proto.DatabaseGRPC.D_Subjects} returns this
*/
proto.DatabaseGRPC.D_Subjects.prototype.setSubjectList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DatabaseGRPC.D_Subject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DatabaseGRPC.D_Subject}
 */
proto.DatabaseGRPC.D_Subjects.prototype.addSubject = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DatabaseGRPC.D_Subject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DatabaseGRPC.D_Subjects} returns this
 */
proto.DatabaseGRPC.D_Subjects.prototype.clearSubjectList = function() {
  return this.setSubjectList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DatabaseGRPC.D_ProjectThemes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_ProjectThemes.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_ProjectThemes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_ProjectThemes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_ProjectThemes.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectthemeList: jspb.Message.toObjectList(msg.getProjectthemeList(),
    proto.DatabaseGRPC.D_ProjectTheme.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_ProjectThemes}
 */
proto.DatabaseGRPC.D_ProjectThemes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_ProjectThemes;
  return proto.DatabaseGRPC.D_ProjectThemes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_ProjectThemes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_ProjectThemes}
 */
proto.DatabaseGRPC.D_ProjectThemes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.D_ProjectTheme;
      reader.readMessage(value,proto.DatabaseGRPC.D_ProjectTheme.deserializeBinaryFromReader);
      msg.addProjecttheme(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_ProjectThemes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_ProjectThemes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_ProjectThemes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_ProjectThemes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectthemeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DatabaseGRPC.D_ProjectTheme.serializeBinaryToWriter
    );
  }
};


/**
 * repeated D_ProjectTheme ProjectTheme = 1;
 * @return {!Array<!proto.DatabaseGRPC.D_ProjectTheme>}
 */
proto.DatabaseGRPC.D_ProjectThemes.prototype.getProjectthemeList = function() {
  return /** @type{!Array<!proto.DatabaseGRPC.D_ProjectTheme>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DatabaseGRPC.D_ProjectTheme, 1));
};


/**
 * @param {!Array<!proto.DatabaseGRPC.D_ProjectTheme>} value
 * @return {!proto.DatabaseGRPC.D_ProjectThemes} returns this
*/
proto.DatabaseGRPC.D_ProjectThemes.prototype.setProjectthemeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DatabaseGRPC.D_ProjectTheme=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DatabaseGRPC.D_ProjectTheme}
 */
proto.DatabaseGRPC.D_ProjectThemes.prototype.addProjecttheme = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DatabaseGRPC.D_ProjectTheme, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DatabaseGRPC.D_ProjectThemes} returns this
 */
proto.DatabaseGRPC.D_ProjectThemes.prototype.clearProjectthemeList = function() {
  return this.setProjectthemeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DatabaseGRPC.D_Project.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_Project.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_Project.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_Project} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Project.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    completed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    lastedited: jspb.Message.getFieldWithDefault(msg, 4, ""),
    enddate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    documentsList: jspb.Message.toObjectList(msg.getDocumentsList(),
    proto.DatabaseGRPC.D_Document.toObject, includeInstance),
    projectthemeid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    closetodeletion: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_Project}
 */
proto.DatabaseGRPC.D_Project.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_Project;
  return proto.DatabaseGRPC.D_Project.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_Project} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_Project}
 */
proto.DatabaseGRPC.D_Project.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompleted(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastedited(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnddate(value);
      break;
    case 6:
      var value = new proto.DatabaseGRPC.D_Document;
      reader.readMessage(value,proto.DatabaseGRPC.D_Document.deserializeBinaryFromReader);
      msg.addDocuments(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProjectthemeid(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClosetodeletion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_Project.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_Project.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_Project} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Project.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompleted();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLastedited();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEnddate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.DatabaseGRPC.D_Document.serializeBinaryToWriter
    );
  }
  f = message.getProjectthemeid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getClosetodeletion();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.DatabaseGRPC.D_Project.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.DatabaseGRPC.D_Project.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool completed = 3;
 * @return {boolean}
 */
proto.DatabaseGRPC.D_Project.prototype.getCompleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.setCompleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string lastedited = 4;
 * @return {string}
 */
proto.DatabaseGRPC.D_Project.prototype.getLastedited = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.setLastedited = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string endDate = 5;
 * @return {string}
 */
proto.DatabaseGRPC.D_Project.prototype.getEnddate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.setEnddate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated D_Document documents = 6;
 * @return {!Array<!proto.DatabaseGRPC.D_Document>}
 */
proto.DatabaseGRPC.D_Project.prototype.getDocumentsList = function() {
  return /** @type{!Array<!proto.DatabaseGRPC.D_Document>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DatabaseGRPC.D_Document, 6));
};


/**
 * @param {!Array<!proto.DatabaseGRPC.D_Document>} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
*/
proto.DatabaseGRPC.D_Project.prototype.setDocumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.DatabaseGRPC.D_Document=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DatabaseGRPC.D_Document}
 */
proto.DatabaseGRPC.D_Project.prototype.addDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.DatabaseGRPC.D_Document, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};


/**
 * optional int32 ProjectThemeID = 7;
 * @return {number}
 */
proto.DatabaseGRPC.D_Project.prototype.getProjectthemeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.setProjectthemeid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool CloseToDeletion = 8;
 * @return {boolean}
 */
proto.DatabaseGRPC.D_Project.prototype.getClosetodeletion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.DatabaseGRPC.D_Project} returns this
 */
proto.DatabaseGRPC.D_Project.prototype.setClosetodeletion = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DatabaseGRPC.D_Document.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_Document.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_Document.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_Document} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Document.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    projectid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    data: jspb.Message.getFieldWithDefault(msg, 5, ""),
    completedcount: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    completedList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_Document}
 */
proto.DatabaseGRPC.D_Document.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_Document;
  return proto.DatabaseGRPC.D_Document.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_Document} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_Document}
 */
proto.DatabaseGRPC.D_Document.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCompletedcount(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addCompleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_Document.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_Document.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_Document} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Document.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProjectid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCompletedcount();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getCompletedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.DatabaseGRPC.D_Document.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 projectID = 2;
 * @return {number}
 */
proto.DatabaseGRPC.D_Document.prototype.getProjectid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.setProjectid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.DatabaseGRPC.D_Document.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.DatabaseGRPC.D_Document.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string data = 5;
 * @return {string}
 */
proto.DatabaseGRPC.D_Document.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float completedCount = 6;
 * @return {number}
 */
proto.DatabaseGRPC.D_Document.prototype.getCompletedcount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.setCompletedcount = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * repeated string completed = 7;
 * @return {!Array<string>}
 */
proto.DatabaseGRPC.D_Document.prototype.getCompletedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.setCompletedList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.addCompleted = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DatabaseGRPC.D_Document} returns this
 */
proto.DatabaseGRPC.D_Document.prototype.clearCompletedList = function() {
  return this.setCompletedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_RemoteFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_RemoteFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_RemoteFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    projectid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    path: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_RemoteFile}
 */
proto.DatabaseGRPC.D_RemoteFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_RemoteFile;
  return proto.DatabaseGRPC.D_RemoteFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_RemoteFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_RemoteFile}
 */
proto.DatabaseGRPC.D_RemoteFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProjectid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_RemoteFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_RemoteFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_RemoteFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProjectid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_RemoteFile} returns this
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_RemoteFile} returns this
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_RemoteFile} returns this
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 projectID = 4;
 * @return {number}
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.getProjectid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_RemoteFile} returns this
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.setProjectid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string path = 5;
 * @return {string}
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_RemoteFile} returns this
 */
proto.DatabaseGRPC.D_RemoteFile.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_Subject.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_Subject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_Subject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Subject.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.DatabaseGRPC.UserDbInfomation.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_Subject}
 */
proto.DatabaseGRPC.D_Subject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_Subject;
  return proto.DatabaseGRPC.D_Subject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_Subject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_Subject}
 */
proto.DatabaseGRPC.D_Subject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DatabaseGRPC.UserDbInfomation;
      reader.readMessage(value,proto.DatabaseGRPC.UserDbInfomation.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_Subject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_Subject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_Subject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_Subject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DatabaseGRPC.UserDbInfomation.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional UserDbInfomation user = 1;
 * @return {?proto.DatabaseGRPC.UserDbInfomation}
 */
proto.DatabaseGRPC.D_Subject.prototype.getUser = function() {
  return /** @type{?proto.DatabaseGRPC.UserDbInfomation} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.UserDbInfomation, 1));
};


/**
 * @param {?proto.DatabaseGRPC.UserDbInfomation|undefined} value
 * @return {!proto.DatabaseGRPC.D_Subject} returns this
*/
proto.DatabaseGRPC.D_Subject.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.D_Subject} returns this
 */
proto.DatabaseGRPC.D_Subject.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.D_Subject.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.DatabaseGRPC.D_Subject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_Subject} returns this
 */
proto.DatabaseGRPC.D_Subject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 ID = 3;
 * @return {number}
 */
proto.DatabaseGRPC.D_Subject.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_Subject} returns this
 */
proto.DatabaseGRPC.D_Subject.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.toObject = function(opt_includeInstance) {
  return proto.DatabaseGRPC.D_ProjectTheme.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DatabaseGRPC.D_ProjectTheme} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_ProjectTheme.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enddate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastedited: jspb.Message.getFieldWithDefault(msg, 4, ""),
    teacher: jspb.Message.getFieldWithDefault(msg, 5, ""),
    subject: jspb.Message.getFieldWithDefault(msg, 6, ""),
    projects: (f = msg.getProjects()) && proto.DatabaseGRPC.D_Projects.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DatabaseGRPC.D_ProjectTheme}
 */
proto.DatabaseGRPC.D_ProjectTheme.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DatabaseGRPC.D_ProjectTheme;
  return proto.DatabaseGRPC.D_ProjectTheme.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DatabaseGRPC.D_ProjectTheme} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DatabaseGRPC.D_ProjectTheme}
 */
proto.DatabaseGRPC.D_ProjectTheme.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnddate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastedited(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeacher(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 7:
      var value = new proto.DatabaseGRPC.D_Projects;
      reader.readMessage(value,proto.DatabaseGRPC.D_Projects.deserializeBinaryFromReader);
      msg.setProjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DatabaseGRPC.D_ProjectTheme.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DatabaseGRPC.D_ProjectTheme} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DatabaseGRPC.D_ProjectTheme.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnddate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastedited();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTeacher();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProjects();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.DatabaseGRPC.D_Projects.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 ID = 1;
 * @return {number}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string endDate = 3;
 * @return {string}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.getEnddate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.setEnddate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string lastEdited = 4;
 * @return {string}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.getLastedited = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.setLastedited = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Teacher = 5;
 * @return {string}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.getTeacher = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.setTeacher = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string subject = 6;
 * @return {string}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional D_Projects projects = 7;
 * @return {?proto.DatabaseGRPC.D_Projects}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.getProjects = function() {
  return /** @type{?proto.DatabaseGRPC.D_Projects} */ (
    jspb.Message.getWrapperField(this, proto.DatabaseGRPC.D_Projects, 7));
};


/**
 * @param {?proto.DatabaseGRPC.D_Projects|undefined} value
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
*/
proto.DatabaseGRPC.D_ProjectTheme.prototype.setProjects = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.DatabaseGRPC.D_ProjectTheme} returns this
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.clearProjects = function() {
  return this.setProjects(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DatabaseGRPC.D_ProjectTheme.prototype.hasProjects = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.DatabaseGRPC);
